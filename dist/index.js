"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const fmD=new Intl.DateTimeFormat(void 0,{year:"2-digit",month:"2-digit",day:"2-digit"}),fmT=new Intl.DateTimeFormat(void 0,{hour:"numeric",minute:"numeric",second:"numeric",hour12:!1}),fmDT=new Intl.DateTimeFormat(void 0,{year:"2-digit",month:"2-digit",day:"2-digit",hour:"numeric",minute:"numeric",second:"numeric",hour12:!1});let nD=()=>new Date,nowD=()=>fmD.format(new Date),nowT=()=>fmT.format(new Date),nowTM=()=>{let t=new Date;return`${fmT.format(t)}.${t.getMilliseconds().toPrecision(3)}`},nowDT=()=>fmDT.format(new Date);class ETA{constructor(){this.current=new Date}ini(t=""){const e=new Date,n=`[${fmT.format(e)}] [Ini 0ms] ${t}`;return this.current=e,n}plainLap(){const t=new Date,e=t-this.current;return this.current=t,e}lap(t=""){const e=new Date,n=`[${fmT.format(e)}] [Lap ${e-this.current}ms] ${t}`;return this.current=e,n}end(t=""){const e=new Date,n=`[${fmT.format(e)}] [End ${e-this.current}ms] ${t}`;return this.current=e,n}}const iterate=(t,e=(()=>{}))=>{let n;for(let r=0;r<t;r++)n=e();return n};exports.ETA=ETA,exports.nD=nD,exports.nowD=nowD,exports.nowT=nowT,exports.nowTM=nowTM,exports.nowDT=nowDT,exports.iterate=iterate;
